*****************************************************************************
                              Reflection
                          Workshop - #3 (P2)
Full Name  : Jiaheng Wang
Student ID#: 180562217
Email      : jwang522@myseneca.ca
Section    : NNN

Authenticity Declaration:
I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
*****************************************************************************
1. The reason is that computer processing of data involves data conversion and various complex operations, such as the conversion of different units and bases (binary decimal). For example, "cents2 = 10.12" has bigger errors than the other two because it is possible that some division operations cannot be divided completely for this number(maybe no binary can totally represent this number), and it lost precision in the calculation. 

2. int fiftyDollars, twentyDollars; //numbers of different paper bills
    float fiftyDollars_Balance, twentyDollars_Balance; //balance after deduction

    fiftyDollars = Total / 50;
    fiftyDollars_Balance = Total - fiftyDollars * 50; //we can use Total % 50 if Total is int, but if Total is float or double, it is illegal in C programming.
    twentyDollars = fiftyDollars_Balance / 20;

3. int dollars = 7245;
    float cents = 72.45;
    conversion:
    a. cents = (float)dollars / 100;         //explicit cast
    b. cents = (double)dollars / 100.0;  //explicit cast
    c. cents = dollars / 100.0f;               //implicit cast
    d. cents = dollars / 100.0;               //implicit cast
    printf("%.2f\n", cents);
    we can make "int" convert "float" first and then calculate; or do the calculation first, and then the result will covert automatically according to the type of data.



